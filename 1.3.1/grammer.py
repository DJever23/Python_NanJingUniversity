# -*- coding: utf-8 -*-
# @Time    : 2020/3/18 15:33
# @Author  : wscffaa
# @Email   : 1294714904@qq.com
# @File    : variable.py
# @Software: PyCharm

#标识符是指Python语言中允许作为变量名或其他对象名称的有效符号
   #首字母是字母或下划线
   #其余可以使字幕，下划线，数字
   #大小写敏感，比如PI和pi是两个标识符
   #全大写一般是字符常量，避免使用下划线开头
   #遵循规则：  见名识义
   #参考规则：  凸形状，比如shuName  ； 下划线，比如shu_Name

#关键字是Python语言的关键组成部分，不可随便作为其他对象的标识符
   #在一门语言中关键字是基本固定的集合
   #在IDE中常以不同颜色字体出现

#用运算符连接各种类型数据的式子就是表达式
   #算数运算符： 乘方 ** 正负号 +- 乘除 */ 整除 // 取余 %/ 加减 +-
   #位运算符 取反 ~ 与 & 或 | 异或 ^ 左移 << 右移 >>
   #比较运算符 < > <= >= == !=
   #逻辑运算符 非 not 与 and 或 or

#运算符有优先级顺序并且表达式必须要有运算结果

#变量第一次赋值，同时获得类型和值，以引用的方式赋值，指向内存单元
#下面的运行都是在Python Console下完成
x = 3.5
y = x
y is x  #True 指向同一个单位


z = 3.5
z is x  #False 虽然都是3.5的值 但是指向的单位不是同一个

id(x)
id(y)
id(z)

p = 256
q = 256
p is q  #True
p = 257
q = 257
p is q  #False 在Python中，相同的若干个小指数默认范围是-5~256
        #还有部分仅包含数字字母和下划线的字面常量字符串会被分配同一内存空间
        #这种高效方式会优化数据的存储速度
        #Python规定在同一个语句块中，相同的不可变对象不另外分配空间

#增量赋值操作符 += -= *= %= **= <<= >>= &= ^= |=
# 其实就是把两步合成一步来运行，链式赋值同理
#  元组 就是(x,y)  比如x,y = y,x 可以直接操作，也就是多重赋值的方式

#语句：完整执行一个任务的一行逻辑代码
#比如print语句完成输出功能，赋值语句完成赋值功能

#表达式：任务中的一个具体组成部分
#语句：重点是完成一个任务